1) Classes básicas

    class Produto
    {
        public int ProdutoID { get; set; }
        public string Nome { get; set; }
        public decimal Preco { get; set; }
        public int Estoque { get; set; }
    }

    class Categoria
    {
        public int CategoriaID { get; set; }
        public string Nome { get; set; }
    }

2) Classes relacionadas

    class Produto
    {
        public int ProdutoID { get; set; }
        public string Nome { get; set; }
        public decimal Preco { get; set; }
        public int Estoque { get; set; }

	 public Categoria Categoria { get; set; }
    }

    class Categoria
    {
        public int CategoriaID { get; set; }
        public string Nome { get; set; }

	public List<Produto> Produtos { get; set; }
    }

3) Variante com ICollection

class Produto
    {
        public int ProdutoID { get; set; }
        public string Nome { get; set; }
        public decimal Preco { get; set; }
        public int Estoque { get; set; }

	public Categoria Categoria { get; set; }
    }

    class Categoria
    {
        public int CategoriaID { get; set; }
        public string Nome { get; set; }

	public ICollection<Produto> Produtos { get; set; }
    }

4) Contexto de conexão

    public class LojaContext : DbContext
    {

    }

4.1) Ligar classes a contexto

    public class LojaContext : DbContext
    {
        public DbSet<Categoria> Categorias { get; set; }
        public DbSet<Produto> Produtos { get; set; }
    }


4.2) CRUD só com "INSERT" 

5) Construtor DBContext
        public LojaContext(string conexao):base(conexao)
        {

        }
Pode ser string de conexão do config ou uma variável string

6) Mapeamento - Uso de Atributos

[Table("Products")]

[Key]

7) OnModelCreating
  protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Entity<Produto>()
                .Property(d => d.Nome)
                .IsRequired();
        }           

	    var db = new LojaContext();

            var NovaCategoria = new Categoria() { Nome = "Eletrodomésticos" };

            db.Categorias.Add(NovaCategoria);

            db.SaveChanges();